[package]
name = "esp32c3-embassy"
version = "0.1.0"
authors = ["Gustavo Weber Denardin <gustavo.denardin@gmail.com>"]
edition = "2021"
license = "MIT OR Apache-2.0"

[dependencies]
esp-backtrace = { version = "0.14.2", features = [
    "esp32c3",
    "exception-handler",
    "panic-handler",
    "println",
] }

esp-hal = { version = "0.22.0", features = [ "riscv", "esp32c3"] }
esp-hal-embassy = {version="0.5.0", features = [ "esp32c3", "integrated-timers" ] }
#cfg-if              = {version = "1.0.0"}
#critical-section    = "1.2.0"
embassy-executor    = { version = "0.6.3", features = ["task-arena-size-131072"] }
embassy-futures     = "0.1.1"
#"medium-ethernet"
embassy-net = { version = "0.4.0", features = [ "tcp", "udp", "dhcpv4", "dns"] }
#embassy-net = { path = "../embassy-net", features = [ "tcp", "udp", "dhcpv4", "dns"] }
#"medium-ethernet"
#smoltcp             = { version = "0.11.0", default-features = false, features = ["socket-raw", "dns-max-server-count-4"] }
embassy-sync        = "0.6.1"
embassy-time        = "0.3.2"
#embassy-usb         = { version = "0.3.0", default-features = false }
#embedded-can        = "0.4.1"
#embedded-graphics   = "0.8.1"
#embedded-hal-async  = "1.0.0"
#embedded-io         = { version = "0.6.1", default-features = false }
embedded-io-async   = "0.6.1"
static_cell = "2.1.0"
esp-println = { version = "0.12.0", features = ["esp32c3", "log"] }
log = { version = "0.4.22" }
esp-alloc = { version = "0.5.0" }
#"phy-enable-usb"
esp-wifi = { version = "0.11.0", features = ["esp32c3", "wifi", "utils"]}
heapless = { version = "0.8.0", default-features = false }

#reqwless = { version = "0.12.1", default-features = false, features = ["esp-mbedtls", "log"] }
reqwless = { version = "0.12.1", features = ["embedded-tls", "log"] }
#esp-mbedtls = { git = "https://github.com/esp-rs/esp-mbedtls.git",  features = ["esp32c3"] }
# Random
rand_core = "0.6.4"
# Time
time = { version = "0.3.37", default-features = false }

[profile.dev]
# Rust debug is too slow.
# For debug builds always builds with some optimization
opt-level = "s"

[profile.release]
codegen-units = 1 # LLVM can perform better optimizations using a single thread
debug = 2
debug-assertions = false
incremental = false
lto = 'fat'
opt-level = 's'
overflow-checks = false
